class JaxbConverterFactoryTest
!!!269934.java!!!	setUp() : void
    JaxbConverterFactory factory = JaxbConverterFactory.create();
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url("/"))
        .addConverterFactory(factory)
        .build();
    service = retrofit.create(Service.class);
!!!270062.java!!!	xmlRequestBody() : void
    server.enqueue(new MockResponse());

    Call<Void> call = service.postXml(SAMPLE_CONTACT);
    call.execute();

    RecordedRequest request = server.takeRequest();
    assertThat(request.getHeader("Content-Type")).isEqualTo("application/xml; charset=utf-8");
    assertThat(request.getBody().readUtf8()).isEqualTo(SAMPLE_CONTACT_XML);
!!!270190.java!!!	xmlResponseBody() : void
    server.enqueue(new MockResponse()
        .setBody(SAMPLE_CONTACT_XML));

    Call<Contact> call = service.getXml();
    Response<Contact> response = call.execute();
    assertThat(response.body()).isEqualTo(SAMPLE_CONTACT);
!!!270318.java!!!	characterEncoding() : void
    server.enqueue(new MockResponse()
        .setBody(""
            + "<?xml version=\"1.0\" ?>"
            + "<contact>"
            + "<name>Бронтозавр \uD83E\uDD95 ティラノサウルス・レックス &#129430;</name>"
            + "</contact>"));

    Call<Contact> call = service.getXml();
    Response<Contact> response = call.execute();
    assertThat(response.body().name)
        .isEqualTo("Бронтозавр \uD83E\uDD95 ティラノサウルス・レックス \uD83E\uDD96");
!!!270446.java!!!	userSuppliedJaxbContext() : void
    JAXBContext context = JAXBContext.newInstance(Contact.class);
    JaxbConverterFactory factory = JaxbConverterFactory.create(context);
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url("/"))
        .addConverterFactory(factory)
        .build();
    service = retrofit.create(Service.class);

    server.enqueue(new MockResponse());

    Call<Void> call = service.postXml(SAMPLE_CONTACT);
    call.execute();

    RecordedRequest request = server.takeRequest();
    assertThat(request.getHeader("Content-Type")).isEqualTo("application/xml; charset=utf-8");
    assertThat(request.getBody().readUtf8()).isEqualTo(SAMPLE_CONTACT_XML);
!!!270574.java!!!	malformedXml() : void
    server.enqueue(new MockResponse()
        .setBody("This is not XML"));

    Call<Contact> call = service.getXml();
    try {
      call.execute();
      fail();
    } catch (RuntimeException expected) {
      assertThat(expected).hasMessageContaining("ParseError");
    }
!!!270702.java!!!	unrecognizedField() : void
    server.enqueue(new MockResponse()
        .setBody(""
            + "<?xml version=\"1.0\" ?>"
            + "<contact>"
            + "<name>Jenny</name>"
            + "<age>21</age>"
            + "<phone_number type=\"FAX\">"
            + "<number>867-5309</number>"
            + "</phone_number>"
            + "</contact>"));

    Call<Contact> call = service.getXml();
    Response<Contact> response = call.execute();
    assertThat(response.body().name).isEqualTo("Jenny");
