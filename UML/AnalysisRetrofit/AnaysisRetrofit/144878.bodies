class CallEnqueueOnSubscribe
!!!192878.java!!!	CallEnqueueOnSubscribe(inout originalCall : Call)
    this.originalCall = originalCall;
!!!193006.java!!!	call(inout subscriber : Subscriber<? super Response<T>>) : void
    // Since Call is a one-shot type, clone it for each new subscriber.
    Call<T> call = originalCall.clone();
    final CallArbiter<T> arbiter = new CallArbiter<>(call, subscriber);
    subscriber.add(arbiter);
    subscriber.setProducer(arbiter);

    call.enqueue(new Callback<T>() {
      @Override public void onResponse(Call<T> call, Response<T> response) {
        arbiter.emitResponse(response);
      }

      @Override public void onFailure(Call<T> call, Throwable t) {
        Exceptions.throwIfFatal(t);
        arbiter.emitError(t);
      }
    });
