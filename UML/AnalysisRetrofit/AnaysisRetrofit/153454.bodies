class RecordingCompletableObserver
!!!239854.java!!!	onComplete() : void
    events.add(Notification.createOnComplete());
!!!239982.java!!!	onError(inout e : Throwable) : void
    events.add(Notification.createOnError(e));
!!!240110.java!!!	takeNotification() : Notification<?>
    Notification<?> notification = events.pollFirst();
    if (notification == null) {
      throw new AssertionError("No event found!");
    }
    return notification;
!!!240238.java!!!	takeError() : Throwable
    Notification<?> notification = takeNotification();
    assertThat(notification.isOnError())
        .as("Expected onError event but was " + notification)
        .isTrue();
    return notification.getError();
!!!240366.java!!!	assertComplete() : void
    Notification<?> notification = takeNotification();
    assertThat(notification.isOnComplete())
        .as("Expected onCompleted event but was " + notification)
        .isTrue();
    assertNoEvents();
!!!240494.java!!!	assertError(inout throwable : Throwable) : void
    assertThat(takeError()).isEqualTo(throwable);
!!!240622.java!!!	assertError(inout errorClass : Class<? extends Throwable>) : void
    assertError(errorClass, null);
!!!240750.java!!!	assertError(inout errorClass : Class<? extends Throwable>, in message : String) : void
    Throwable throwable = takeError();
    assertThat(throwable).isInstanceOf(errorClass);
    if (message != null) {
      assertThat(throwable).hasMessage(message);
    }
    assertNoEvents();
!!!240878.java!!!	assertNoEvents() : void
    assertThat(events).as("Unconsumed events found!").isEmpty();
